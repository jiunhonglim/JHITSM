<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="DELETE">
        <category>kb</category>
        <client_script><![CDATA[function($scope, spKBCategoryService, $timeout, $location, $rootScope, urlTools, spAriaFocusManager, spAriaUtil) {
	var c = this;
	$scope.hideCategoryWidgetInXS = (c.data.categoryId) ? true : false;
	spKBCategoryService.addDefaultListener(function(catId){
		$location.search({id: 'kb_category', kb_category: catId, kb_id: c.data.kb_id});
	});
	
	c.setCategory = function(evt, catId) {
		evt.preventDefault();
		var searchParms = $location.search();
		searchParms.kb_category = catId;
		searchParms.spa = 1;
		$location.search(searchParms);
		spKBCategoryService.setCategoryId(catId);
	};
	
	// Location change handler for back/forward buttons
	var removeLw = $rootScope.$on('$locationChangeSuccess', function(e, newUrl) {
		spAriaFocusManager.focusOnPageTitle();
		var urlParts = urlTools.parseQueryString(newUrl)
		if (urlParts.id === 'kb_category' && spKBCategoryService.getCategoryId() !== urlParts.kb_category)
			spKBCategoryService.setCategoryId(urlParts.kb_category);
	});
	
	$scope.$on('$destroy', function(){
		removeLw();
	});
	
	// Category is selected. Display articles in this category.
	$scope.categorySelected = function($event, category) {
		var elem = $($event.currentTarget);
		if (elem.attr('role') == 'treeitem')
			elem.attr('aria-selected' , true);
		else
			elem.parent().attr('aria-selected' , true);
			$timeout(function() {
				var searchParms = $location.search();
				searchParms.id = 'kb_category';
				searchParms.kb_category = category.value;
				$location.search(searchParms);
				spKBCategoryService.setCategoryId(category.value);
				spKBCategoryService.setCategorySelected(true);
			});
	};
	
	$scope.handleKeyPress = function($event, category) {
		
		// Keyboard Focus on a tree item creates a selection.
    // Up and Down arrow keys move focus and selection. Previous selections are cleared
    // Right arrow key to expand collapsed node.
    // Left arrow key to collapse expanded node.

		$event.stopPropagation();
		var currentKb = $($event.currentTarget);  // Get the current Kb category.
		var kbCategories = currentKb.closest('ul.category-list').find('.group-item');
		var index = -1;

		if(kbCategories.length > 0)
			index = kbCategories.index(currentKb);

		switch($event.which) {
			case 40: // Arrow down key.
				if(index+1 < kbCategories.length)
					handleArrowDown(index , kbCategories);
				break;
			case 38: // Arrow Up key.
				if(index > 0)
					handleArrowUp(index , kbCategories);
				break;
			case 37: // Left key.
	      handleArrowLeft($event, category, currentKb);
				break;
				
			case 39: // Right key.
				handleArrowRight($event, category, currentKb);
				break;
	 }
	};
	
	function handleArrowDown(index, kbCategories) {
	   kbCategories.get(index).setAttribute('tabindex', '-1');
		 kbCategories.get(index+1).setAttribute('tabindex', '0');
		 kbCategories.get(index+1).focus();
	}
	
	function handleArrowUp(index, kbCategories) {
		 kbCategories.get(index).setAttribute('tabindex', '-1');
		 kbCategories.get(index-1).setAttribute('tabindex', '0');
		 kbCategories.get(index-1).focus();
	}
	
	function handleArrowLeft($event, category, currentKb) {
		if(category.showChildren) {
			$scope.displayChildren($event, category);
		} else {
			var parentSubcategory = currentKb.closest('ul.sub-category-list');
			if (parentSubcategory) {
				var closestParent = parentSubcategory.parent('li').find('.group-item');
				if(closestParent && closestParent.length > 0)
					setFocus(closestParent, currentKb);
			}
		}
	}
	
	function handleArrowRight($event, category, currentKb) {
		if(category.subcategories.length === 0){
			return;
		}
		if(currentKb && !category.showChildren) {
			$scope.displayChildren($event, category);
		} else if(category.subcategories && category.subcategories.length > 0) {
		    var closestChild = currentKb.next().find('.group-item');
			  if(closestChild && closestChild.length > 0)
					setFocus(closestChild, currentKb);
		}
	}

	function setFocus(node, currentElem){
		if (node) {
			currentElem.attr('tabindex', -1);
			node.get(0).setAttribute('tabindex', 0);
			node.get(0).focus();
		}
	}
	
	//To support Show more functionality
	$scope.loadMore = function() {
		c.data.getMore = true;
		c.data.loadAllMsg = c.data.pleaseWait;
		c.data.categoriesCount = c.data.categoriesCount;
		c.server.update();
	}; 
	
	//On expanding the node, reset + to - 
	$scope.displayChildren = function($event, category) {
		$event.stopPropagation();
		category.showChildren = !category.showChildren;

		if (category.showChildren) {
			spAriaUtil.sendLiveMessage(category.label + ' '+ c.data.messages.expanded);
		} else {
			spAriaUtil.sendLiveMessage(category.label + ' ' +c.data.messages.collapsed);
		}
	};
	var listenerForBrowseCategories = $scope.$on("$sp.kb.show.categories_widget", function() {
		$scope.hideCategoryWidgetInXS = false;
	});
	$scope.$on("$destroy", function() {
		listenerForBrowseCategories();
	});
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.category-widget {
	border: 1px solid $panel-inner-border;

	[role="treeitem"] {
	    cursor: pointer;
	}
  
  .category-list {
    .fa {
      margin-right: 5px;
    }
    .text-overflow{
      overflow: auto;
      word-wrap: break-word;
    }
    .l-h-1_6x {
      line-height: 1.6em;
    }
    a {
			width: 88%;
	    display: inline-block;
    }
    .list-group {
      margin-bottom: 0;
    }
    .list-group-item {
      padding: 0;
      border: 0;
    }
    .group-item {
      padding: 10px 15px;
    }
    .group-item-default {
      &amp;:hover, &amp;:focus {
        background-color: darken($panel-default-heading-bg, 2%);
      }
    }
    .group-item-primary {
      &amp;:hover, &amp;:focus {
        background-color: lighten($panel-primary-heading-bg, 40%);
      }
    }
    .group-item-success {
      &amp;:hover {
        background-color: lighten($panel-success-heading-bg, 3%)
      }
    }
    .group-item-info {
      &amp;:hover, &amp;:focus {
        background-color: lighten($panel-info-heading-bg, 3%)
      }
    }
    .group-item-warning {
      &amp;:hover, &amp;:focus {
        background-color: $panel-warning-heading-bg
      }
    }
    .group-item-danger {
      &amp;:hover, &amp;:focus {
        background-color: lighten($panel-danger-heading-bg, 3%)
      }
    }
    
    .sub-category-list {
      .list-group-item {
        background-color: inherit;
      }
    }
    
    .list-bg-default {
        border-left: 15px solid $panel-default-heading-bg;
      }
      .list-bg-primary {
        border-left: 15px solid lighten($panel-primary-heading-bg, 43%);
      }
      .list-bg-success {
        border-left: 15px solid lighten($panel-success-heading-bg, 6%);
      }
      .list-bg-info {
        border-left: 15px solid lighten($panel-info-heading-bg, 6%);
      }
      .list-bg-warning {
        border-left: 15px solid lighten($panel-warning-heading-bg, 3%);
      }
      .list-bg-danger {
        border-left: 15px solid lighten($panel-danger-heading-bg, 6%);
      }
    
    .list-bg-default {
      background-color: $panel-default-heading-bg;
    }
    .list-bg-primary {
      background-color: lighten($panel-primary-heading-bg, 43%);
    }
    .list-bg-success {
      background-color: lighten($panel-success-heading-bg, 6%);
    }
    .list-bg-info {
      background-color: lighten($panel-info-heading-bg, 6%);
    }
    .list-bg-warning {
      background-color: lighten($panel-warning-heading-bg, 3%);
    }
    .list-bg-danger {
      background-color: lighten($panel-danger-heading-bg, 6%);
    }
  }
}
.panel-primary .badge {
  background-color: $panel-primary-heading-bg;
  color: white;
}
.panel-default .badge {
  background-color: $panel-default-text;
  color: white
}
.panel-success .badge {
  background-color:  $panel-success-text;
  color: white;
}
.panel-info .badge {
  background-color: $panel-info-text;
  color: white;
}
.panel-warning .badge {
  background-color: $panel-warning-text;
  color: white;
}
.panel-danger .badge {
  background-color: $panel-danger-text;
  color: white;
}
.category-list .badge {
  text-align: right;
}
.text-default {
  color: $text-muted;
}
.label-as-badge {
	padding: .35em .6em .3em;
}

.panel {
  color: $inherit;
}

.category-list {
  span.badge {
    background-color: $primary;
    color: $color-lightest;
  }
  span.list-group-item {
    border: inherit;
  }
  span.list-group-item:hover {
	background: $body-bg;
  }
} 

.text-default {
  color: $primary;
}

@media screen and (max-width: 843px) {
  .panel-heading i.fa{
     display: none;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color,title</field_list>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>MPA KB Categories</name>
        <option_schema>[{"hint":"Number of categories to load on page load","name":"number_of_categories_to_load","section":"Data","default_value":"15","label":"Number of top-level categories to load (default 15). Higher values can impact performance.","type":"integer"},{"name":"omit_badges","section":"Behavior","label":"Omit badge counts (can improve performance for large categories)","type":"boolean"},{"name":"check_access_per_category","section":"Data","default_value":"0","label":"Max number of articles evaluated per category to determine visibility. Zero means all categories are visible if user has access to the Knowledge Base. Higher values can impact performance.","type":"string"},{"name":"max_article_limit_for_counts","section":"Data","default_value":"500","label":"Max article limit to allow category counts - if number of articles in configured Knowledge Bases exceeds this limit, category counts are not calculated. Higher values can impact performance.","type":"string"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	
	//Get Knowledge Base Id. If knowledge base is not selected, get knowledge bases associated with portal.
	data.kb = "";
	data.kb_id = $sp.getParameter("kb_id");
	data.show = false;
	if (data.kb_id) {
		var kbArr = [];
		var kbGR = new GlideRecord("kb_knowledge_base");
		kbGR.addQuery("sys_id", "IN", data.kb_id);
		kbGR.query();
		while (kbGR.next()) {
			if (kbGR.canRead())
				kbArr.push(kbGR.getUniqueValue());
		}
		data.kb = String(kbArr);
	} else
		data.kb = String($sp.getKnowledgeBases());
	
	//To support Show more functionality
	var loadCategories = options.number_of_categories_to_load || 15;
	data.showMoreMsg = gs.getMessage("Show More");
	data.pleaseWait = gs.getMessage("Please wait... fetching categories");

	var maxArticleLimitForCounts = parseInt(options.max_article_limit_for_counts) || 500;
	var articles = new GlideRecord("kb_knowledge");
	articles.addQuery("kb_knowledge_base", "IN", data.kb);
	articles.addQuery("workflow_state", "published");
	articles.addQuery("valid_to", ">=", new GlideDate().getValue());
	articles.addActiveQuery();
	articles.setLimit(maxArticleLimitForCounts);
	articles.query();

	var kbCount = articles.getRowCount();

  // Get all top-level categories in selected knowledge bases
	var cats = new GlideRecord("kb_category");
	cats.addActiveQuery();
	cats.addQuery("parent_id",'IN', data.kb);
	cats.orderBy('label');
	cats.query();
	
	var categoryId = $sp.getParameter('kb_category');
	var msg = data.messages = {};
	msg.expanded = gs.getMessage("Expanded");
	msg.collapsed = gs.getMessage("Collapsed");

	data.category = {};
	data.categories = [];
  
	//To support Show more functionality
	if (input && input.getMore)
	    loadCategories = loadCategories + parseInt(input.categoriesCount);

	var categoriesCount = 0;
  
	// Get Subcategories and build tree structure
	while (cats.next()) {
	    var categoryDetails = getCategory(cats, 0);
	    data.categories.push(categoryDetails);

		  //To support Show more functionality
		  if (categoryDetails.count != 0)
		      categoriesCount++;
		  if (categoriesCount >= loadCategories)
			    break;
	}
	
  data.showMore = cats.hasNext();
	data.categoriesCount = categoriesCount;
	data.loadAllMsg = gs.getMessage("Showing {0} categories", [categoriesCount + ""]); 
	data.categoryId = categoryId;
	
	if (data.categoriesCount > 0) {
		data.categories[0].isFirstCategory = true;
	}
	
	options.check_access_per_category = parseInt(options.check_access_per_category);

	function getCategory(cats, level) {
		var categoryDetails = {};
		var articleCount = -1;
		var arts;
		
		if (kbCount < maxArticleLimitForCounts) {
			// small KB, get full canRead counts for each category
			arts = $sp.getKBCategoryArticleSummary(cats.getUniqueValue(), 0, 0);
			articleCount = arts.length;
			if (articleCount > 0)
				data.show = true;
		} else if (options.check_access_per_category > 0) {
			// large KB, don't get counts but check first N articles for read access to category
			arts = $sp.getKBCategoryArticleSummary(cats.getUniqueValue(), options.check_access_per_category, 0);
			if (arts.length > 0)
				data.show = true;
			else
				articleCount = 0; // nothing to see here, no visible article found
		} else {
			// large KB, not checking article access before showing category, preserves legacy behavior
			data.show = true;
		}
		
		categoryDetails.label = cats.getDisplayValue("label");
		categoryDetails.value = cats.getUniqueValue();
		categoryDetails.count = articleCount;
		categoryDetails.showChildren = (cats.sys_id == categoryId);
		categoryDetails.level = level;
		
		var subcategories = new GlideRecord("kb_category");	
		subcategories = $sp.getSubCategories(cats.getUniqueValue());
		categoryDetails.subcategories = [];
		while (subcategories.next()) {
			var category = getCategory(subcategories, level+1);
			if (category.count != 0) {
				categoryDetails.subcategories.push(category);
				categoryDetails.count += category.count;
			}
			categoryDetails.showChildren = categoryDetails.showChildren || category.showChildren;
		}
		return categoryDetails;
	}
})()
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>jiunhong.lim</sys_created_by>
        <sys_created_on>2022-06-17 03:18:56</sys_created_on>
        <sys_id>8203b80f470895103d482462846d4300</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>MPA KB Categories</sys_name>
        <sys_package display_value="JH - ITSM TEST" source="a16cdc3047cc9910d93f7372846d430d">a16cdc3047cc9910d93f7372846d430d</sys_package>
        <sys_policy/>
        <sys_scope display_value="JH - ITSM TEST">a16cdc3047cc9910d93f7372846d430d</sys_scope>
        <sys_update_name>sp_widget_8203b80f470895103d482462846d4300</sys_update_name>
        <sys_updated_by>jiunhong.lim</sys_updated_by>
        <sys_updated_on>2022-06-17 03:21:11</sys_updated_on>
        <template><![CDATA[<section aria-label="${Knowledge categories}">
  <div ng-if="::(data.show != true)">
    ${No categories available}
  </div>
  <div ng-show="data.kb" ng-class="{'hidden-xs' : hideCategoryWidgetInXS}" class="panel panel-{{::c.options.color}} category-widget no-border" ng-if="::(data.show == true)">
    <div class="panel-heading">
      <h2 class="h4 panel-title" ng-bind="::c.options.title" id="kb_categories_title"></h2>
    </div>
    <ul class="list-group category-list" role="tree" aria-labelledby="kb_categories_title">
      <li role="{{category.subcategories.length > 0 ? 'treeitem' : 'presentation'}}"
          class="list-group-item text-overflow" 
          ng-include="'kbv3-category-template.html'" 
          ng-attr-aria-expanded="{{category.subcategories.length > 0 ? category.showChildren : undefined}}"
          ng-attr-aria-selected="{{category.subcategories.length > 0 ? category.value == c.data.categoryId : undefined}}"
          ng-repeat="category in c.data.categories track by category.value | orderBy : '-published' "
          ng-if="category.count != 0">
      </li>
    </ul>
    <div class="panel-footer text-center" ng-if="data.showMore">
      <a href="javascript:void(0)" role="button" class="text-center" ng-click="loadMore()" >{{::data.showMoreMsg}}</a>
      <div class="text-muted text-center" role="status">
        {{data.loadAllMsg}}
      </div>
    </div>
  </div>
</section>

<script type="text/ng-template" id="kbv3-category-template.html">
  	<div ng-click="categorySelected($event, category)"
         ng-attr-tabindex="{{category.value == c.data.categoryId || (!c.data.categoryId && category.isFirstCategory) ? '0' : undefined}}"  
         ng-keydown="handleKeyPress($event, category)"
         sn-focus="category.value == c.data.categoryId"
		 ng-enabled="category.count != 0"
         role="treeitem"
         ng-attr-aria-selected="{{category.subcategories.length == 0 ? category.value == c.data.categoryId : undefined}}"
         aria-label="{{category.showChildren? '${Expanded category} ' + category.label : '${Collapsed category} ' + category.label}}"
         class="group-item group-item-{{::options.color}}">
      <i ng-if="::category.subcategories.length > 0" 
      	  class="l-h-1_6x pull-left fa" 
          ng-class="{true: 'fa-minus-square-o', false: 'fa-plus-square-o'}[category.showChildren]" 
          ng-click="displayChildren($event, category)"
          role="presentation"/></i>
      <span  ng-if="category.count > 0 && options.omit_badges != 'true'"  class="badge pull-right pointer">{{::category.count}}</span>
      <span class="block text-overflow category" 
          ng-class="{true: 'text-{{::options.color}}', false: ''}[category.value == c.data.categoryId]"
          id="{{::category.value}}">
          {{::category.label}}
          <span class="sr-only">${items}</span>
      </span>
    </div>
  	<ul class="list-group sub-category-list list-bg-{{::options.color}}" 
    		aria-label="{{category.label}} ${subcategories}" 
        role="group"
    		ng-if="category.showChildren && category.subcategories.length >0"  
        ng-class="{true: 'no-indent', false: ''}[category.level > 2]"> 
      <li role="{{category.subcategories.length > 0 ? 'treeitem' : 'presentation'}}" 
      		class="list-group-item text-overflow" 
          ng-include="'kbv3-category-template.html'"
          ng-attr-aria-expanded="{{category.subcategories.length > 0 ? category.showChildren : undefined}}"
          ng-attr-aria-selected="{{category.subcategories.length > 0 ? category.value == c.data.categoryId : undefined}}"
          ng-repeat="category in category.subcategories | orderBy: 'label' track by category.value " 
          ng-if="category.count != 0">
      </li>
  	</ul>
</script>]]></template>
    </sp_widget>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="JH - ITSM TEST">a16cdc3047cc9910d93f7372846d430d</application>
        <file_path/>
        <instance_id>1690ea83db1c8910e03ad7c8f49619f9</instance_id>
        <instance_name>empjlim1</instance_name>
        <name>sp_widget_8203b80f470895103d482462846d4300</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;kb&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, spKBCategoryService, $timeout, $location, $rootScope, urlTools, spAriaFocusManager, spAriaUtil) {
	var c = this;
	$scope.hideCategoryWidgetInXS = (c.data.categoryId) ? true : false;
	spKBCategoryService.addDefaultListener(function(catId){
		$location.search({id: 'kb_category', kb_category: catId, kb_id: c.data.kb_id});
	});
	
	c.setCategory = function(evt, catId) {
		evt.preventDefault();
		var searchParms = $location.search();
		searchParms.kb_category = catId;
		searchParms.spa = 1;
		$location.search(searchParms);
		spKBCategoryService.setCategoryId(catId);
	};
	
	// Location change handler for back/forward buttons
	var removeLw = $rootScope.$on('$locationChangeSuccess', function(e, newUrl) {
		spAriaFocusManager.focusOnPageTitle();
		var urlParts = urlTools.parseQueryString(newUrl)
		if (urlParts.id === 'kb_category' &amp;&amp; spKBCategoryService.getCategoryId() !== urlParts.kb_category)
			spKBCategoryService.setCategoryId(urlParts.kb_category);
	});
	
	$scope.$on('$destroy', function(){
		removeLw();
	});
	
	// Category is selected. Display articles in this category.
	$scope.categorySelected = function($event, category) {
		var elem = $($event.currentTarget);
		if (elem.attr('role') == 'treeitem')
			elem.attr('aria-selected' , true);
		else
			elem.parent().attr('aria-selected' , true);
			$timeout(function() {
				var searchParms = $location.search();
				searchParms.id = 'kb_category';
				searchParms.kb_category = category.value;
				$location.search(searchParms);
				spKBCategoryService.setCategoryId(category.value);
				spKBCategoryService.setCategorySelected(true);
			});
	};
	
	$scope.handleKeyPress = function($event, category) {
		
		// Keyboard Focus on a tree item creates a selection.
    // Up and Down arrow keys move focus and selection. Previous selections are cleared
    // Right arrow key to expand collapsed node.
    // Left arrow key to collapse expanded node.

		$event.stopPropagation();
		var currentKb = $($event.currentTarget);  // Get the current Kb category.
		var kbCategories = currentKb.closest('ul.category-list').find('.group-item');
		var index = -1;

		if(kbCategories.length &gt; 0)
			index = kbCategories.index(currentKb);

		switch($event.which) {
			case 40: // Arrow down key.
				if(index+1 &lt; kbCategories.length)
					handleArrowDown(index , kbCategories);
				break;
			case 38: // Arrow Up key.
				if(index &gt; 0)
					handleArrowUp(index , kbCategories);
				break;
			case 37: // Left key.
	      handleArrowLeft($event, category, currentKb);
				break;
				
			case 39: // Right key.
				handleArrowRight($event, category, currentKb);
				break;
	 }
	};
	
	function handleArrowDown(index, kbCategories) {
	   kbCategories.get(index).setAttribute('tabindex', '-1');
		 kbCategories.get(index+1).setAttribute('tabindex', '0');
		 kbCategories.get(index+1).focus();
	}
	
	function handleArrowUp(index, kbCategories) {
		 kbCategories.get(index).setAttribute('tabindex', '-1');
		 kbCategories.get(index-1).setAttribute('tabindex', '0');
		 kbCategories.get(index-1).focus();
	}
	
	function handleArrowLeft($event, category, currentKb) {
		if(category.showChildren) {
			$scope.displayChildren($event, category);
		} else {
			var parentSubcategory = currentKb.closest('ul.sub-category-list');
			if (parentSubcategory) {
				var closestParent = parentSubcategory.parent('li').find('.group-item');
				if(closestParent &amp;&amp; closestParent.length &gt; 0)
					setFocus(closestParent, currentKb);
			}
		}
	}
	
	function handleArrowRight($event, category, currentKb) {
		if(category.subcategories.length === 0){
			return;
		}
		if(currentKb &amp;&amp; !category.showChildren) {
			$scope.displayChildren($event, category);
		} else if(category.subcategories &amp;&amp; category.subcategories.length &gt; 0) {
		    var closestChild = currentKb.next().find('.group-item');
			  if(closestChild &amp;&amp; closestChild.length &gt; 0)
					setFocus(closestChild, currentKb);
		}
	}

	function setFocus(node, currentElem){
		if (node) {
			currentElem.attr('tabindex', -1);
			node.get(0).setAttribute('tabindex', 0);
			node.get(0).focus();
		}
	}
	
	//To support Show more functionality
	$scope.loadMore = function() {
		c.data.getMore = true;
		c.data.loadAllMsg = c.data.pleaseWait;
		c.data.categoriesCount = c.data.categoriesCount;
		c.server.update();
	}; 
	
	//On expanding the node, reset + to - 
	$scope.displayChildren = function($event, category) {
		$event.stopPropagation();
		category.showChildren = !category.showChildren;

		if (category.showChildren) {
			spAriaUtil.sendLiveMessage(category.label + ' '+ c.data.messages.expanded);
		} else {
			spAriaUtil.sendLiveMessage(category.label + ' ' +c.data.messages.collapsed);
		}
	};
	var listenerForBrowseCategories = $scope.$on("$sp.kb.show.categories_widget", function() {
		$scope.hideCategoryWidgetInXS = false;
	});
	$scope.$on("$destroy", function() {
		listenerForBrowseCategories();
	});
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.category-widget {
	border: 1px solid $panel-inner-border;

	[role="treeitem"] {
	    cursor: pointer;
	}
  
  .category-list {
    .fa {
      margin-right: 5px;
    }
    .text-overflow{
      overflow: auto;
      word-wrap: break-word;
    }
    .l-h-1_6x {
      line-height: 1.6em;
    }
    a {
			width: 88%;
	    display: inline-block;
    }
    .list-group {
      margin-bottom: 0;
    }
    .list-group-item {
      padding: 0;
      border: 0;
    }
    .group-item {
      padding: 10px 15px;
    }
    .group-item-default {
      &amp;amp;:hover, &amp;amp;:focus {
        background-color: darken($panel-default-heading-bg, 2%);
      }
    }
    .group-item-primary {
      &amp;amp;:hover, &amp;amp;:focus {
        background-color: lighten($panel-primary-heading-bg, 40%);
      }
    }
    .group-item-success {
      &amp;amp;:hover {
        background-color: lighten($panel-success-heading-bg, 3%)
      }
    }
    .group-item-info {
      &amp;amp;:hover, &amp;amp;:focus {
        background-color: lighten($panel-info-heading-bg, 3%)
      }
    }
    .group-item-warning {
      &amp;amp;:hover, &amp;amp;:focus {
        background-color: $panel-warning-heading-bg
      }
    }
    .group-item-danger {
      &amp;amp;:hover, &amp;amp;:focus {
        background-color: lighten($panel-danger-heading-bg, 3%)
      }
    }
    
    .sub-category-list {
      .list-group-item {
        background-color: inherit;
      }
    }
    
    .list-bg-default {
        border-left: 15px solid $panel-default-heading-bg;
      }
      .list-bg-primary {
        border-left: 15px solid lighten($panel-primary-heading-bg, 43%);
      }
      .list-bg-success {
        border-left: 15px solid lighten($panel-success-heading-bg, 6%);
      }
      .list-bg-info {
        border-left: 15px solid lighten($panel-info-heading-bg, 6%);
      }
      .list-bg-warning {
        border-left: 15px solid lighten($panel-warning-heading-bg, 3%);
      }
      .list-bg-danger {
        border-left: 15px solid lighten($panel-danger-heading-bg, 6%);
      }
    
    .list-bg-default {
      background-color: $panel-default-heading-bg;
    }
    .list-bg-primary {
      background-color: lighten($panel-primary-heading-bg, 43%);
    }
    .list-bg-success {
      background-color: lighten($panel-success-heading-bg, 6%);
    }
    .list-bg-info {
      background-color: lighten($panel-info-heading-bg, 6%);
    }
    .list-bg-warning {
      background-color: lighten($panel-warning-heading-bg, 3%);
    }
    .list-bg-danger {
      background-color: lighten($panel-danger-heading-bg, 6%);
    }
  }
}
.panel-primary .badge {
  background-color: $panel-primary-heading-bg;
  color: white;
}
.panel-default .badge {
  background-color: $panel-default-text;
  color: white
}
.panel-success .badge {
  background-color:  $panel-success-text;
  color: white;
}
.panel-info .badge {
  background-color: $panel-info-text;
  color: white;
}
.panel-warning .badge {
  background-color: $panel-warning-text;
  color: white;
}
.panel-danger .badge {
  background-color: $panel-danger-text;
  color: white;
}
.category-list .badge {
  text-align: right;
}
.text-default {
  color: $text-muted;
}
.label-as-badge {
	padding: .35em .6em .3em;
}

.panel {
  color: $inherit;
}

.category-list {
  span.badge {
    background-color: $primary;
    color: $color-lightest;
  }
  span.list-group-item {
    border: inherit;
  }
  span.list-group-item:hover {
	background: $body-bg;
  }
} 

.text-default {
  color: $primary;
}

@media screen and (max-width: 843px) {
  .panel-heading i.fa{
     display: none;
  }
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;color,title&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;MPA KB Categories&lt;/name&gt;&lt;option_schema&gt;[{"hint":"Number of categories to load on page load","name":"number_of_categories_to_load","section":"Data","default_value":"15","label":"Number of top-level categories to load (default 15). Higher values can impact performance.","type":"integer"},{"name":"omit_badges","section":"Behavior","label":"Omit badge counts (can improve performance for large categories)","type":"boolean"},{"name":"check_access_per_category","section":"Data","default_value":"0","label":"Max number of articles evaluated per category to determine visibility. Zero means all categories are visible if user has access to the Knowledge Base. Higher values can impact performance.","type":"string"},{"name":"max_article_limit_for_counts","section":"Data","default_value":"500","label":"Max article limit to allow category counts - if number of articles in configured Knowledge Bases exceeds this limit, category counts are not calculated. Higher values can impact performance.","type":"string"}]&lt;/option_schema&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	
	//Get Knowledge Base Id. If knowledge base is not selected, get knowledge bases associated with portal.
	data.kb = "";
	data.kb_id = $sp.getParameter("kb_id");
	data.show = false;
	if (data.kb_id) {
		var kbArr = [];
		var kbGR = new GlideRecord("kb_knowledge_base");
		kbGR.addQuery("sys_id", "IN", data.kb_id);
		kbGR.query();
		while (kbGR.next()) {
			if (kbGR.canRead())
				kbArr.push(kbGR.getUniqueValue());
		}
		data.kb = String(kbArr);
	} else
		data.kb = String($sp.getKnowledgeBases());
	
	//To support Show more functionality
	var loadCategories = options.number_of_categories_to_load || 15;
	data.showMoreMsg = gs.getMessage("Show More");
	data.pleaseWait = gs.getMessage("Please wait... fetching categories");

	var maxArticleLimitForCounts = parseInt(options.max_article_limit_for_counts) || 500;
	var articles = new GlideRecord("kb_knowledge");
	articles.addQuery("kb_knowledge_base", "IN", data.kb);
	articles.addQuery("workflow_state", "published");
	articles.addQuery("valid_to", "&gt;=", new GlideDate().getValue());
	articles.addActiveQuery();
	articles.setLimit(maxArticleLimitForCounts);
	articles.query();

	var kbCount = articles.getRowCount();

  // Get all top-level categories in selected knowledge bases
	var cats = new GlideRecord("kb_category");
	cats.addActiveQuery();
	cats.addQuery("parent_id",'IN', data.kb);
	cats.orderBy('label');
	cats.query();
	
	var categoryId = $sp.getParameter('kb_category');
	var msg = data.messages = {};
	msg.expanded = gs.getMessage("Expanded");
	msg.collapsed = gs.getMessage("Collapsed");

	data.category = {};
	data.categories = [];
  
	//To support Show more functionality
	if (input &amp;&amp; input.getMore)
	    loadCategories = loadCategories + parseInt(input.categoriesCount);

	var categoriesCount = 0;
  
	// Get Subcategories and build tree structure
	while (cats.next()) {
	    var categoryDetails = getCategory(cats, 0);
	    data.categories.push(categoryDetails);

		  //To support Show more functionality
		  if (categoryDetails.count != 0)
		      categoriesCount++;
		  if (categoriesCount &gt;= loadCategories)
			    break;
	}
	
  data.showMore = cats.hasNext();
	data.categoriesCount = categoriesCount;
	data.loadAllMsg = gs.getMessage("Showing {0} categories", [categoriesCount + ""]); 
	data.categoryId = categoryId;
	
	if (data.categoriesCount &gt; 0) {
		data.categories[0].isFirstCategory = true;
	}
	
	options.check_access_per_category = parseInt(options.check_access_per_category);

	function getCategory(cats, level) {
		var categoryDetails = {};
		var articleCount = -1;
		var arts;
		
		if (kbCount &lt; maxArticleLimitForCounts) {
			// small KB, get full canRead counts for each category
			arts = $sp.getKBCategoryArticleSummary(cats.getUniqueValue(), 0, 0);
			articleCount = arts.length;
			if (articleCount &gt; 0)
				data.show = true;
		} else if (options.check_access_per_category &gt; 0) {
			// large KB, don't get counts but check first N articles for read access to category
			arts = $sp.getKBCategoryArticleSummary(cats.getUniqueValue(), options.check_access_per_category, 0);
			if (arts.length &gt; 0)
				data.show = true;
			else
				articleCount = 0; // nothing to see here, no visible article found
		} else {
			// large KB, not checking article access before showing category, preserves legacy behavior
			data.show = true;
		}
		
		categoryDetails.label = cats.getDisplayValue("label");
		categoryDetails.value = cats.getUniqueValue();
		categoryDetails.count = articleCount;
		categoryDetails.showChildren = (cats.sys_id == categoryId);
		categoryDetails.level = level;
		
		var subcategories = new GlideRecord("kb_category");	
		subcategories = $sp.getSubCategories(cats.getUniqueValue());
		categoryDetails.subcategories = [];
		while (subcategories.next()) {
			var category = getCategory(subcategories, level+1);
			if (category.count != 0) {
				categoryDetails.subcategories.push(category);
				categoryDetails.count += category.count;
			}
			categoryDetails.showChildren = categoryDetails.showChildren || category.showChildren;
		}
		return categoryDetails;
	}
})()
]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;jiunhong.lim&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-06-17 03:18:56&lt;/sys_created_on&gt;&lt;sys_id&gt;8203b80f470895103d482462846d4300&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;MPA KB Categories&lt;/sys_name&gt;&lt;sys_package display_value="JH - ITSM TEST" source="a16cdc3047cc9910d93f7372846d430d"&gt;a16cdc3047cc9910d93f7372846d430d&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="JH - ITSM TEST"&gt;a16cdc3047cc9910d93f7372846d430d&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_8203b80f470895103d482462846d4300&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;jiunhong.lim&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-06-17 03:21:11&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;section aria-label="${Knowledge categories}"&gt;
  &lt;div ng-if="::(data.show != true)"&gt;
    ${No categories available}
  &lt;/div&gt;
  &lt;div ng-show="data.kb" ng-class="{'hidden-xs' : hideCategoryWidgetInXS}" class="panel panel-{{::c.options.color}} category-widget no-border" ng-if="::(data.show == true)"&gt;
    &lt;div class="panel-heading"&gt;
      &lt;h2 class="h4 panel-title" ng-bind="::c.options.title" id="kb_categories_title"&gt;&lt;/h2&gt;
    &lt;/div&gt;
    &lt;ul class="list-group category-list" role="tree" aria-labelledby="kb_categories_title"&gt;
      &lt;li role="{{category.subcategories.length &gt; 0 ? 'treeitem' : 'presentation'}}"
          class="list-group-item text-overflow" 
          ng-include="'kbv3-category-template.html'" 
          ng-attr-aria-expanded="{{category.subcategories.length &gt; 0 ? category.showChildren : undefined}}"
          ng-attr-aria-selected="{{category.subcategories.length &gt; 0 ? category.value == c.data.categoryId : undefined}}"
          ng-repeat="category in c.data.categories track by category.value | orderBy : '-published' "
          ng-if="category.count != 0"&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="panel-footer text-center" ng-if="data.showMore"&gt;
      &lt;a href="javascript:void(0)" role="button" class="text-center" ng-click="loadMore()" &gt;{{::data.showMoreMsg}}&lt;/a&gt;
      &lt;div class="text-muted text-center" role="status"&gt;
        {{data.loadAllMsg}}
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;script type="text/ng-template" id="kbv3-category-template.html"&gt;
  	&lt;div ng-click="categorySelected($event, category)"
         ng-attr-tabindex="{{category.value == c.data.categoryId || (!c.data.categoryId &amp;&amp; category.isFirstCategory) ? '0' : undefined}}"  
         ng-keydown="handleKeyPress($event, category)"
         sn-focus="category.value == c.data.categoryId"
		 ng-enabled="category.count != 0"
         role="treeitem"
         ng-attr-aria-selected="{{category.subcategories.length == 0 ? category.value == c.data.categoryId : undefined}}"
         aria-label="{{category.showChildren? '${Expanded category} ' + category.label : '${Collapsed category} ' + category.label}}"
         class="group-item group-item-{{::options.color}}"&gt;
      &lt;i ng-if="::category.subcategories.length &gt; 0" 
      	  class="l-h-1_6x pull-left fa" 
          ng-class="{true: 'fa-minus-square-o', false: 'fa-plus-square-o'}[category.showChildren]" 
          ng-click="displayChildren($event, category)"
          role="presentation"/&gt;&lt;/i&gt;
      &lt;span  ng-if="category.count &gt; 0 &amp;&amp; options.omit_badges != 'true'"  class="badge pull-right pointer"&gt;{{::category.count}}&lt;/span&gt;
      &lt;span class="block text-overflow category" 
          ng-class="{true: 'text-{{::options.color}}', false: ''}[category.value == c.data.categoryId]"
          id="{{::category.value}}"&gt;
          {{::category.label}}
          &lt;span class="sr-only"&gt;${items}&lt;/span&gt;
      &lt;/span&gt;
    &lt;/div&gt;
  	&lt;ul class="list-group sub-category-list list-bg-{{::options.color}}" 
    		aria-label="{{category.label}} ${subcategories}" 
        role="group"
    		ng-if="category.showChildren &amp;&amp; category.subcategories.length &gt;0"  
        ng-class="{true: 'no-indent', false: ''}[category.level &gt; 2]"&gt; 
      &lt;li role="{{category.subcategories.length &gt; 0 ? 'treeitem' : 'presentation'}}" 
      		class="list-group-item text-overflow" 
          ng-include="'kbv3-category-template.html'"
          ng-attr-aria-expanded="{{category.subcategories.length &gt; 0 ? category.showChildren : undefined}}"
          ng-attr-aria-selected="{{category.subcategories.length &gt; 0 ? category.value == c.data.categoryId : undefined}}"
          ng-repeat="category in category.subcategories | orderBy: 'label' track by category.value " 
          ng-if="category.count != 0"&gt;
      &lt;/li&gt;
  	&lt;/ul&gt;
&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1854050849</payload_hash>
        <record_name>MPA KB Categories</record_name>
        <reverted_from/>
        <source>a10bd0fc478c9910d93f7372846d43f9</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>jiunhong.lim</sys_created_by>
        <sys_created_on>2022-06-17 03:21:11</sys_created_on>
        <sys_id>3a83f80f470895103d482462846d436b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1816fadd3a80000001</sys_recorded_at>
        <sys_updated_by>jiunhong.lim</sys_updated_by>
        <sys_updated_on>2022-06-17 03:21:11</sys_updated_on>
        <type>Widget</type>
        <update_guid>fe83f80f05089510e6d07daace71ca6a</update_guid>
        <update_guid_history>fe83f80f05089510e6d07daace71ca6a:-1854050849,4203b80f68089510782d354b04f2ee03:-24395541</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="MPA KB Categories">0edc9d4747c895103d482462846d4377</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>jiunhong.lim</sys_created_by>
        <sys_created_on>2022-06-17 06:21:38</sys_created_on>
        <sys_db_object display_value="" name="sp_widget">sp_widget</sys_db_object>
        <sys_id>208728cb5385422892d55ea38a6a82e4</sys_id>
        <sys_metadata>8203b80f470895103d482462846d4300</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MPA KB Categories</sys_name>
        <sys_package display_value="JH - ITSM TEST" source="a16cdc3047cc9910d93f7372846d430d">a16cdc3047cc9910d93f7372846d430d</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="JH - ITSM TEST">a16cdc3047cc9910d93f7372846d430d</sys_scope>
        <sys_scope_delete display_value="">0d1dfae512654fa694e193b29fa20924</sys_scope_delete>
        <sys_update_name>sp_widget_8203b80f470895103d482462846d4300</sys_update_name>
        <sys_update_version display_value="sp_widget_8203b80f470895103d482462846d4300">3a83f80f470895103d482462846d436b</sys_update_version>
        <sys_updated_by>jiunhong.lim</sys_updated_by>
        <sys_updated_on>2022-06-17 06:21:38</sys_updated_on>
    </sys_metadata_delete>
</record_update>
